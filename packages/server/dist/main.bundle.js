(()=>{var e={6672:(e,t,s)=>{const r=new(s(1639)),i=s(5699),o=s(6129),a=s(8022),n=s(2567);s(4634),s(8805),s(3077);const c=s(7256),{ILogService:l}=s(730),h=c.inject(l),u=h.get("server"),g=h.get("http");o(r),r.use((async(e,t)=>{try{await t()}catch(t){if(e.status=t.status||500,500===e.status)return e.body.message="server internal error. Fix problem and try again later. This can be caused by unexpected input or server error.",void u.error(500,t);e.body={message:t.message}}})),r.use(a({enableTypes:["json","form","text"]})),r.use(i()),r.use(n(((e,t)=>{g.info(e)}))),r.use(s(8835)(s(5622).resolve(__dirname,"../../web/dist/pwa")));const d=s(5528);r.use(d.routes(),d.allowedMethods());const p=s(9572),{jwtAuth:y,requestAccessToken:f}=s(5690);r.use(p.routes(),p.allowedMethods()),r.use(y),r.use(f);const w=s(2112);r.use(w.routes(),w.allowedMethods()),e.exports=r},4634:(e,t,s)=>{const r=s(7256),i=s(9903),{IConfigService:o,genDescriptor:a}=s(2455),n=r.inject(o);n.register(i.AUTH_USERNAME,a("admin","string")),n.register(i.AUTH_PASSWORD,a("7b2e9f54cdff413fcde01f330af6896c3cd7e6cd","string")),n.register(i.AUTH_SECRET,a("secret","string")),n.register(i.AUTH_EXPIRE,a("1h","string")),n.register(i.AUTH_REFRESH,a("7d","string"));const{v4:c}=s(1231),l=s(9722),{SHA1:h}=s(419),{IStorageService:u}=s(6284),{ILogService:g}=s(730),d="IAuthService";r.provide(d,class{constructor(){this._configService=r.inject(o),this._storageService=r.inject(u),this._logger=r.inject(g).get("auth")}basicAuth(e,t){return e===this._configService.get(i.AUTH_USERNAME)&&h(t).toString()===this._configService.get(i.AUTH_PASSWORD)&&(this._logger.info("basic auth pass"),!0)}getToken(){const e=c(),t=this._configService.get(i.AUTH_SECRET),s=this._configService.get(i.AUTH_EXPIRE),r=this._configService.get(i.AUTH_REFRESH),o=l.sign({type:"access",uuid:e},t,{expiresIn:s}),a=l.sign({type:"refresh",uuid:e},t,{expiresIn:r}),n=this._storageService.get("refresh")||{};return n[e]=a,this._storageService.set("refresh",n),{accessToken:o,refreshToken:a}}verifyToken(e){const t=l.verify(e,this._configService.get(i.AUTH_SECRET));return this._logger.debug("jwt auth pass"),t}getUserInfo(){return{name:this._configService.get(i.AUTH_USERNAME)}}setSecurity({secret:e,expire:t,refresh:s,username:r,password:o}={}){e&&this._configService.set(i.AUTH_SECRET,e),t&&this._configService.set(i.AUTH_EXPIRE,t),s&&this._configService.set(i.AUTH_REFRESH,s),r&&this._configService.set(i.AUTH_USERNAME,r),o&&this._configService.set(i.AUTH_PASSWORD,h(o).toString())}}),t.IAuthService=d},9903:e=>{e.exports={AUTH_SECRET:"auth.secret",AUTH_EXPIRE:"auth.expire",AUTH_REFRESH:"auth.refresh",AUTH_USERNAME:"auth.username",AUTH_PASSWORD:"auth.password"}},5690:(e,t,s)=>{const r=s(7752),i=s(2064),o=s(7256),{IStorageService:a}=s(6284),{IAuthService:n}=s(4634),{ILogService:c}=s(730),l=s(4320),h=o.inject(c).get("auth");function u(e){return e.header.authorization.split(" ")[1]}t.v={password:l.object({password:l.string().required()})},t.basicAuth=async function(e,t){const s=o.inject(n),i=r(e.request);if(!i){const e=new Error;throw e.status=401,e.message="basic authentication required",e}if(!s.basicAuth(i.name,i.pass)){const e=new Error;throw e.status=401,e.message="wrong username or password",e}await t()},t.getToken=async function(e,t){const s=o.inject(n);e.body=s.getToken()},t.jwtAuth=i([async(e,t)=>{try{await t()}catch(t){"Authtication Error"===t.message&&(e.status=401,e.body={message:"Authtication Error"})}},async function(e,t){const s=o.inject(n),r=function(e){if(!e.header||!e.header.authorization)return;const t=e.header.authorization.split(" ");if(2===t.length){const e=t[0],s=t[1];if(/^Bearer$/i.test(e))return s}throw new Error("Authtication Error")}(e);if(!r)throw new Error("Authtication Error");try{const t=s.verifyToken(r);e.state.user=t}catch(e){throw new Error("Authtication Error")}await t()}]),t.blacklist=async(e,t)=>{const s=o.inject(a),r=u(e);if((s.get("blacklist")||[]).map((e=>e.token)).includes(r)){h.info("block invalid refresh token");const e=new Error;throw e.status=401,e.message="Authentication Error",e}await t()},t.requestAccessToken=async function(e,t){if("access"!==e.state.user.type){const e=new Error;throw e.status=403,e.message="Require Access Token",e}await t()},t.requestRefreshToken=async function(e,t){if("refresh"!==e.state.user.type){const e=new Error;throw e.status=403,e.message="Require Refresh Token",e}h.info("refresh token used"),await t()},t.logout=async(e,t)=>{const s=o.inject(a),r=u(e);let i=s.get("blacklist")||[];const n=s.get("refresh")||{};n[e.state.user.uuid]&&(i.push({token:r,exp:e.state.user.exp}),i=i.filter((e=>e.exp>parseInt((new Date).valueOf()/1e3,10))),h.info("block token"),s.set("blacklist",i),delete n[e.state.user.uuid],s.set("refresh",n)),e.status=200},t.info=async(e,t)=>{const s=o.inject(n);e.body=s.getUserInfo()},t.password=async(e,t)=>{const{password:s}=e.request.body,r=o.inject(n);e.body=r.setSecurity({password:s})}},9572:(e,t,s)=>{const r=s(6757),{validateRequestBody:i}=s(8859),o=s(5690),a=new r;a.post("/login",o.basicAuth,o.getToken),a.post("/refresh",o.jwtAuth,o.blacklist,o.requestRefreshToken,o.getToken),a.get("/info",o.jwtAuth,o.requestAccessToken,o.info),a.post("/logout",o.jwtAuth,o.requestAccessToken,o.logout),a.post("/password",o.basicAuth,i(o.v.password),o.password),e.exports=a},2455:(e,t,s)=>{const r=s(7256),{IStorageService:i}=s(6284);function o(e){const t=new Error(e);throw t.name="ConfigService",t}t.genDescriptor=(e,t,s=!1)=>({defaultValue:e,type:t,required:s});const a="IConfigService";r.provide(a,class{constructor(){this._storageService=r.inject(i),this._map=new Map}getConfigDefs(){return[...this._map.keys()].map((e=>({...this._map.get(e),key:e})))}getConfig(){return this._storageService.get("config")||{}}_setConfig(e){this._storageService.set("config",e)}_hasKey(e){this._map.has(e)||o("Unknown config key: "+e)}get(e){this._hasKey(e);const t=this.getConfig();return Object.prototype.hasOwnProperty.call(t,e)?t[e]:this._map.get(e).required?void o(`config ${e} shoundn't be null`):this._map.get(e).defaultValue}set(e,t){this._hasKey(e);let s=this.getConfig();void 0===t?delete s[e]:s={...s,[e]:t},this._setConfig(s)}register(e,t=null){return!this._map.has(e)&&(this._map.set(e,t),!0)}}),t.IConfigService=a},5425:(e,t,s)=>{s(6284),s(2455)},730:(e,t,s)=>{const r=s(6455),i=s(5622),o=s(5747),{isDev:a}=s(5912),n=i.resolve(process.cwd(),"log"),c=e=>i.resolve(n,e);function l(e){const t=new Error(e);throw t.name="LogService",t}o.existsSync(n)||o.mkdirSync(n);class h{constructor(e,t=!0,s=!0,r=!0){e&&"string"==typeof e||l("key must be not null string"),this.key=e,this.console=r,this.file=s,this.seprate=t}}t.LogDescriptor=h;class u{constructor(){this._descriptors=new Map,this._loggers=new Map,this.register(new h("http")),this.register(new h("di")),this.register(new h("server")),this.register(new h("auth")),this.register(new h("hexo")),this.register(new h("installer",!1));const e={...u.baseAppenders},t={...u.baseCategories};this._descriptors.forEach((s=>{s.file&&(e[s.key]={type:"file",filename:c(s.key+".log"),removeColor:!0});const r=[];s.console&&r.push("console"),r.push("all"),s.file&&(s.seprate?r.push(s.key):r.push("default")),t[s.key]={appenders:r,level:a?"debug":"info"}})),r.configure({appenders:e,categories:t}),this._descriptors.forEach((e=>{this._loggers.set(e.key,r.getLogger(e.key))}))}register(e){this._descriptors.has(e.key)&&l(`logger ${e.key} in use`),["defulat","all","logservice"].includes(e.key)&&l("restricted key: "+e.key),this._descriptors.set(e.key,e)}get(e){return e||l("key is required"),this._descriptors.has(e)||l(`logger ${e} not found`),this._loggers.get(e)}}u.baseAppenders={default:{type:"file",filename:c("default.log"),removeColor:!0},all:{type:"file",filename:c("all.log"),removeColor:!0},console:{type:"console",layout:{type:"pattern",pattern:"%[[%d{hh:mm:ss.SSS}][%c][%p]%] %m"}}},u.baseCategories={default:{appenders:["console","all","default"],level:a?"debug":"info"}},t.LogService=u,t.ILogService="ILogService"},6284:(e,t,s)=>{const{existsSync:r,mkdirSync:i}=s(5747),{throttle:o}=s(3804),a=s(5622),n=s(1260),c="IStorageService";s(7256).provide(c,class{constructor(){const e=a.resolve(process.cwd(),"./data");r(e)||i(e),this.db=new n(a.resolve(e,"sjson.db")),this.sync=o(this.sync,500)}get(e){return this.sync(),this.db.get(e)}set(e,t){const s=this.db.set(e,t);return this.sync(),s}sync(){this.db.sync()}}),t.IStorageService=c},1086:(e,t,s)=>{const r=s(4320),i=s(7256),{IHexo:o}=s(9527),{search:a}=s(7290);t.v={generate:r.object({deploy:r.boolean(),watch:r.boolean(),bail:r.boolean(),force:r.boolean(),concurrency:r.boolean()}),deploy:r.object({generate:r.boolean()}),new:r.object({title:r.string().required(),layout:r.string(),path:r.string(),slug:r.string(),replace:r.boolean()}),update:r.object({id:r.string().required(),page:r.boolean(),obj:r.object().required()}),delete:r.object({id:r.string().required(),page:r.boolean()}),publish:r.object({id:r.string().required()})},t.qv={search:r.object({query:r.string(),mode:r.string()})},t.generate=async(e,t)=>{const s=i.inject(o);await s.generate(e.request.body),e.status=200},t.deploy=async(e,t)=>{const s=i.inject(o);await s.deploy(e.request.body),e.status=200},t.clean=async(e,t)=>{const s=i.inject(o);await s.clean(),e.status=200},t.listPost=async(e,t)=>{const s=i.inject(o);e.body=await s.listPost()},t.listPage=async(e,t)=>{const s=i.inject(o);e.body=await s.listPage()},t.listTag=async(e,t)=>{const s=i.inject(o);e.body=await s.listTag()},t.listCategory=async(e,t)=>{const s=i.inject(o);e.body=await s.listCategory()},t.new=async(e,t)=>{const s=i.inject(o),{title:r,layout:a,path:n,slug:c,replace:l}=e.request.body,h=await s.new(r,{layout:a,path:n,slug:c,replace:l});e.status=200,e.body=h},t.update=async(e,t)=>{const s=i.inject(o),{id:r,page:a,obj:n}=e.request.body,c=await s.write(r,n,a);e.status=200,e.body=c},t.delete=async(e,t)=>{const s=i.inject(o),{id:r,page:a}=e.request.body;await s.delete(r,a),e.status=200},t.publish=async(e,t)=>{const s=i.inject(o),{id:r}=e.request.body,a=await s.publish(r);e.body=a,e.status=200},t.gitSync=async(e,t)=>{const s=i.inject(o);await s.gitSync(),e.status=200},t.gitSave=async(e,t)=>{const s=i.inject(o);await s.gitSave(),e.status=200},t.notGitRepo=async(e,t)=>{try{await t()}catch(t){if(!(t.message.indexOf("not a git repo")>-1))throw t;e.status=503,e.body={message:"not a git repo"}}},t.search=async(e,t)=>{e.body=await a(decodeURIComponent(e.query.query),e.query.mode)}},915:(e,t,s)=>{const r={HEXO_ROOT:"hexo.root"},i=s(7256),{IConfigService:o,genDescriptor:a}=s(2455);i.inject(o).register(r.HEXO_ROOT,a("","string",!0)),e.exports=r},9527:(e,t,s)=>{s(915);const r=s(6143),i=s(5622),o=s(2242),{restrictedKeys:a,checkIsBlog:n}=s(729),c=s(7256),{IHexoAPI:l}=s(5283),{IHexoCLI:h}=s(797),{IConfigService:u}=s(2455),g=s(915),{ILogService:d}=s(730),p="IHexo";c.provide(p,class{constructor(){this._configService=c.inject(u)}_checkReady(){if(!this.ready)throw new Error("Hexo initiating")}checkIsBlog(e){if(!n(e))throw new Error("Not blog")}async init(){this.cwd=this._configService.get(g.HEXO_ROOT),this.checkIsBlog(this.cwd),this.hapi=c.inject(l),await this.hapi.init(),this.hcli=c.inject(h),this._logger=c.inject(d).get("hexo"),this.ready=!0}async listPost(){return this._checkReady(),this.hapi.listPost()}async listPage(){return this._checkReady(),this.hapi.listPage()}async listTag(){return this._checkReady(),this.hapi.listTag()}async listCategory(){return this._checkReady(),this.hapi.listCategory()}async new(e,t={layout:void 0,path:void 0,slug:void 0,replace:!1}){this._checkReady();const s=await this.hcli.new(...arguments);return this._getBySource(s)}async _getBySource(e){await this.hapi.freload();const t=(await this.listPost()).concat(await this.listPage()).filter((t=>t.full_source===e));if(t.length<1)throw this._logger.log("new id not found"),new Error("Not found");if(t.length>1)throw new Error("Duplicate fail found, retry later");return t[0]}async _getSource(e,t=!1){const s=(t?await this.hapi.listPage():await this.hapi.listPost()).filter((t=>t._id===e));if(s.length<1)throw new Error("Not found");return s[0].full_source}async _getRaw(e,t=!1){const s=(t?await this.hapi.listPage():await this.hapi.listPost()).filter((t=>t._id===e));if(s.length<1)throw new Error("Not found");return s[0].raw}async write(e,t,s=!1){this._checkReady();const i=JSON.parse(JSON.stringify(t));i.fm&&"object"==typeof i.fm&&(Object.keys(i.fm).forEach((e=>{"fm"===e||a.includes(e)||(i[e]=i.fm[e])})),void 0!==i.fm.fm?i.fm=i.fm.fm:delete i.fm),Object.keys(i).forEach((e=>{void 0!==i[e]&&""!==i[e]||delete i[e]}));const n=await this.hapi.stringify(await this._getRaw(e,s),i),c=await this._getSource(e,s);return r.writeFileSync(c,n),this._logger.info("Write file",o.magenta(c)),await this.hapi.freload(),(s?await this.listPage():await this.listPost()).filter((t=>t._id===e))[0]}async delete(e,t=!1){this._checkReady();const s=await this._getSource(e,t);r.unlinkSync(s),await this.hapi.freload(),this._logger.info("Delete file",o.magenta(s))}async generate(e={deploy:!1,watch:!1,bail:!1,force:!1,concurrency:!1}){return this._checkReady(),this.hcli.generate(...arguments)}async deploy(e={generate:!1}){return this._checkReady(),this.hcli.deploy(...arguments)}async clean(){return this._checkReady(),this.hcli.clean(...arguments)}async publish(e,t="post"){this._checkReady();const s=(await this.listPost()).filter((t=>t._id===e));if(s.length<1)throw this._logger.log("publish id not found"),new Error("Not found");const r=s[0];if(r.published)throw new Error("Already published");const o=i.basename(r.source,i.extname(r.source)),a=await this.hcli.publish(o,t);return this._getBySource(a)}async gitSync(){return this.hcli.gitSync()}async gitSave(){return this.hcli.gitSave()}}),t.IHexo=p},5283:(e,t,s)=>{const r=s(6046),i=s(8262),{throttle:o}=s(3804),a=s(4908),{restrictedKeys:n}=s(729),c=s(7256),{IConfigService:l}=s(2455),h=s(915),{ILogService:u}=s(730);function g(e){e.next&&(e.next=e.next._id),e.prev&&(e.prev=e.prev._id),e.date&&(e.date=e.date.valueOf()),e.updated&&(e.updated=e.updated.valueOf());const t=e.toObject();t.tags=t.tags.data.map((e=>e._id)),t.categories=t.categories.data.map((e=>({_id:e._id,parent:e.parent})));const s=Object.keys(t.categories).map((e=>t.categories[e])).map((e=>(void 0===e.parent&&(e.parent=0),e))),r=new a(s,{key_id:"_id",key_parent:"parent",key_child:"_child"}).GetTree();var o;return t.categories=(r?r.map((function e(t){return t._child?[t].concat(e(t._child[0])):[t]})):[[]]).map((e=>e.map((e=>e._id)))),t.fm={},t.fm.fm=i.parse(t.raw),n.map((e=>{void 0!==t.fm.fm[e]&&(t.fm[e]=t.fm.fm[e],delete t.fm.fm[e])})),t.fm.categories&&(t.fm.categories=(o=t.fm.categories)?Array.isArray(o)?o.filter((e=>Array.isArray(e))).length?o.map((e=>Array.isArray(e)?e:[e])):[o]:[[o]]:[[]]),t}function d(e){e.date&&(e.date=e.date.valueOf()),e.updated&&(e.updated=e.updated.valueOf());const t=e.toObject();return t.fm=i.parse(t.raw),t}function p(e){const t=e.toObject();return t.posts=t.posts.map((e=>e._id)),t}function y(e){const t=e.toObject();return t.posts=t.posts.map((e=>e._id)),t}const f="IHexoAPI";c.provide(f,class{constructor(){this._configService=c.inject(l),this.HEXO_ROOT=this._configService.get(h.HEXO_ROOT),this._logger=c.inject(u).get("hexo"),this.hexo=new r(this.HEXO_ROOT,{debug:!1,draft:!0,silent:!0}),this.reload=o(this.reload,5e3,{trailing:!1})}async freload(){await this.hexo.locals.invalidate(),await this.hexo.load(),this._logger.info("Force reload")}async reload(){await this.hexo.locals.invalidate(),await this.hexo.load(),this._logger.info("Reload")}async init(){await this.hexo.init()}async listPost(){await this.reload();const e=await this.hexo.locals.get("posts").toArray().map(g);return this._logger.info("List posts",e.length),e}async listPage(){await this.reload();const e=await this.hexo.locals.get("pages").toArray().map(d);return this._logger.info("List pages",e.length),e}async listTag(){await this.reload();const e=await this.hexo.locals.get("tags").toArray().map(p);return this._logger.info("List tags",e.length),e}async listCategory(){await this.reload();const e=await this.hexo.locals.get("categories").toArray().map(y);return this._logger.info("List categories",e.length),e}async stringify(e,t){let s="";return s+=i.split(e).separator,s+="\n",s+=i.stringify(t),s}}),t.IHexoAPI=f},797:(e,t,s)=>{const r=s(2242),{spawn:i}=s(8746),o=s(4429),a=s(7256),n=s(915),{IConfigService:c}=s(2455),{ILogService:l}=s(730),h="IHexoCLI";a.provide(h,class{constructor(){this._configService=a.inject(c),this.HEXO_ROOT=this._configService.get(n.HEXO_ROOT),this._logger=a.inject(l).get("hexo")}async run(e,t,s={}){const r=Object.keys(s).filter((e=>s[e])).map((e=>"--"+e));await this.runcli(e,"hexo",[t].concat(r))}async runcli(e,t,s=[]){const o=[t].concat(s).map((e=>e.toString().includes(" ")?'"'+e+'"':e)).join(" ");this._logger.info("Run "+r.blue("`"+o+"`")+" "+r.gray(e));try{const r=await i(t,s,{cwd:e});return this._logger.info(r),this._logger.info("Finished"),r}catch(e){throw this._logger.error("Fail to run `"+o+"`"),e}}async generate(e={deploy:!1,watch:!1,bail:!1,force:!1,concurrency:!1}){await this.run(this.HEXO_ROOT,"generate",e)}async deploy(e={generate:!1}){await this.run(this.HEXO_ROOT,"deploy",e)}async clean(){await this.run(this.HEXO_ROOT,"clean")}async new(e,t={layout:void 0,path:void 0,slug:void 0,replace:!1}){const s=["new"];t.layout&&s.push(t.layout),t.path&&(s.push("--path"),s.push(t.path)),t.replace&&s.push("--replace"),t.slug&&(s.push("--slug"),s.push(t.slug)),e&&s.push(e);const r=await this.runcli(this.HEXO_ROOT,"hexo",s);return o(r.split("Created: ")[1].trim())}async publish(e,t){const s=["publish"];t&&s.push(t),s.push(e);const r=await this.runcli(this.HEXO_ROOT,"hexo",s);return o(r.split("Published: ")[1].trim())}async server(){throw new Error("Not Implemented")}async render(){throw new Error("Not Implemented")}async migrate(){throw new Error("Not Implemented")}async list(){throw new Error("Not Implemented")}async init(){throw new Error("Not Implemented")}async version(){this.runcli(this.HEXO_ROOT,"hexo",["version"])}async gitSync(){await this.runcli(this.HEXO_ROOT,"git",["reset","--hard"]);try{await this.runcli(this.HEXO_ROOT,"git",["pull"])}catch(e){if(!e.message.indexOf(!1))throw e;this._logger.info("Local git reset")}}async gitSave(){await this.runcli(this.HEXO_ROOT,"git",["add",".","--all"]);try{await this.runcli(this.HEXO_ROOT,"git",["commit","-m",`server update ${(new Date).toString()}`])}catch(e){if(1!==e.code)throw e}try{await this.runcli(this.HEXO_ROOT,"git",["push"])}catch(e){if(!e.message.indexOf(!1))throw e;this._logger.info("Local git commit")}}}),t.IHexoCLI=h},3077:(e,t,s)=>{s(9527),s(797),s(5283)},729:(e,t,s)=>{const r=s(5747),i=s(5622);t.restrictedKeys=["_content","tags","category","categories","title","date","updated","layout"],t.checkIsBlog=e=>{let t;try{t=r.readFileSync(i.join(e,"package.json")),r.readFileSync(i.join(e,"_config.yml"))}catch(e){if("ENOENT"===e.code)return!1;throw e}return!!JSON.parse(t).dependencies.hexo}},2965:(e,t)=>{t.notFound=async(e,t)=>{try{await t()}catch(t){if("Not found"!==t.message)throw t;e.status=404,e.body={message:"id not found"}}},t.hexoInitiating=async(e,t)=>{try{await t()}catch(t){if("Hexo initiating"!==t.message)throw t;e.status=503,e.body={message:"Hexo initiating"}}},t.notBlog=async(e,t)=>{try{await t()}catch(t){if("Not blog"!==t.message)throw t;e.status=400,e.body={message:"not a hexo blog"}}}},2112:(e,t,s)=>{const r=s(6757),i=s(1086),o=s(2965),{validateRequestBody:a,validateRequestQuery:n}=s(8859),c=new r;c.use(o.hexoInitiating),c.post("/generate",a(i.v.generate),i.generate),c.post("/deploy",a(i.v.deploy),i.deploy),c.post("/clean",i.clean),c.get("/posts",i.listPost),c.get("/pages",i.listPage),c.get("/tags",i.listTag),c.get("/categories",i.listCategory),c.post("/new",a(i.v.new),o.notFound,i.new),c.post("/update",a(i.v.update),o.notFound,i.update),c.post("/delete",a(i.v.delete),o.notFound,i.delete),c.post("/publish",a(i.v.publish),o.notFound,i.publish),c.post("/git/sync",i.notGitRepo,i.gitSync),c.post("/git/save",i.notGitRepo,i.gitSave),c.get("/search",n(i.qv.search),i.search),e.exports=c},7290:(e,t,s)=>{const r=s(7256),{IHexo:i}=s(9527);t.search=async(e,t="")=>{if(!e)return[];const s=r.inject(i),o=new RegExp(e,t),a=await s.listPost(),n=await s.listPage();return((e,t,s,r)=>t.filter((t=>e.test(t.raw))).map((e=>e._id)))(o,a.concat(n))}},9205:(e,t,s)=>{const{ILogService:r,LogService:i}=s(730),o=new i,a=s(7256);a.setLogger(o.get("di"));const n=new Map;n.set(r,i);const c=new Map;c.set(r,o),a.from(n,c)},8465:(e,t,s)=>{const r=s(7256),{IConfigService:i,genDescriptor:o}=s(2455),a={INSTALLED:"install.installed",PORT:"install.port"},n=r.inject(i);n.register(a.INSTALLED,o(!1,"boolean")),n.register(a.PORT,o(5777,"number",!0)),t.InstallConfig=a},1573:(e,t,s)=>{const r=s(4320),i=s(7256),{IInstallService:o}=s(8805);t.v={install:r.object({secret:r.string().required(),expire:r.string().required(),refresh:r.string().required(),username:r.string().required(),password:r.string().required()})},t.checkInstalled=async(e,t)=>{i.inject(o).checkInstalled()?e.status=404:await t()},t.notInstalled=async(e,t)=>{e.status=200},t.install=async(e,t)=>{const s=i.inject(o),{secret:r,expire:a,refresh:n,username:c,password:l}=e.request.body;await s.install({secret:r,expire:a,refresh:n,username:c,password:l}),e.status=200}},8805:(e,t,s)=>{s(8465);const{IAuthService:r}=s(4634),{IConfigService:i}=s(2455),{ILogService:o}=s(730),{IHexo:a}=s(9527),n=s(7256),{InstallConfig:c}=s(8465),l="IInstallService";n.provide(l,class{constructor(){this._configService=n.inject(i),this._hexo=n.inject(a),this._authService=n.inject(r),this._logger=n.inject(o).get("installer")}async install(e){const{secret:t,expire:s,refresh:r,username:i,password:o}=e;this._authService.setSecurity({secret:t,expire:s,refresh:r,username:i,password:o}),this._configService.set(c.INSTALLED,!0),this._hexo.init(),this._logger.info("installed")}checkInstalled(){return this._configService.get(c.INSTALLED)}}),t.IInstallService=l},5528:(e,t,s)=>{const r=s(6757),{validateRequestBody:i}=s(8859),o=s(1573),a=new r;a.prefix("/install"),a.use(o.checkInstalled),a.get("/",o.notInstalled),a.post("/",i(o.v.install),o.install),e.exports=a},5912:(e,t)=>{t.isDev=!1},7256:e=>{function t(e){const t=new Error(e);throw t.name="DI",t}const s=[];class r{static provide(e,s){r.ctors.has(e)&&t(`descriptor ${e} in use`),r.ctors.set(e,s),r.logger.debug("provide",e)}static inject(e){let i;return e||t("descriptor is required"),r.ctors.has(e)||t(`descriptor ${e} not found`),s.includes(e)&&t("circular dependences: "+s.concat(e).join(" > ")),r.logger.debug("inject",e),s.push(e),i=r.services.get(e),i||(r.logger.debug("instantiate",e),i=new(r.ctors.get(e)),r.services.set(e,i)),s.pop(e),i}static from(e,s){e&&s||t("invalid init options"),r.ctors=e,r.services=s}static setLogger(e){r.logger=e}}r.ctors=new Map,r.services=new Map,e.exports=r},8859:(e,t)=>{t.validateRequestBody=e=>async(t,s)=>{try{await e.validateAsync(t.request.body)}catch(e){return console.log(e),t.status=400,void(t.body={message:"Validation failed",details:e.details.map((e=>e.message))})}await s()},t.validateRequestQuery=e=>async(t,s)=>{try{await e.validateAsync(t.request.query)}catch(e){return t.status=400,void(t.body={message:"Validation failed",details:e.details.map((e=>e.message))})}await s()}},7752:e=>{"use strict";e.exports=require("basic-auth")},2242:e=>{"use strict";e.exports=require("chalk")},419:e=>{"use strict";e.exports=require("crypto-js")},4429:e=>{"use strict";e.exports=require("expand-home-dir")},5747:e=>{"use strict";e.exports=require("fs")},6046:e=>{"use strict";e.exports=require("hexo")},8262:e=>{"use strict";e.exports=require("hexo-front-matter")},6143:e=>{"use strict";e.exports=require("hexo-fs")},8746:e=>{"use strict";e.exports=require("hexo-util")},8605:e=>{"use strict";e.exports=require("http")},4320:e=>{"use strict";e.exports=require("joi")},9722:e=>{"use strict";e.exports=require("jsonwebtoken")},1639:e=>{"use strict";e.exports=require("koa")},8022:e=>{"use strict";e.exports=require("koa-bodyparser")},2064:e=>{"use strict";e.exports=require("koa-compose")},5699:e=>{"use strict";e.exports=require("koa-json")},2567:e=>{"use strict";e.exports=require("koa-logger")},6129:e=>{"use strict";e.exports=require("koa-onerror")},6757:e=>{"use strict";e.exports=require("koa-router")},8835:e=>{"use strict";e.exports=require("koa-static")},4908:e=>{"use strict";e.exports=require("list-to-tree")},3804:e=>{"use strict";e.exports=require("lodash")},6455:e=>{"use strict";e.exports=require("log4js")},5622:e=>{"use strict";e.exports=require("path")},1260:e=>{"use strict";e.exports=require("simple-json-db")},1231:e=>{"use strict";e.exports=require("uuid")}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,s),o.exports}(()=>{s(9205),s(5425);const e=s(6672),t=s(8605),r=s(7256),{IHexo:i}=s(9527),{IConfigService:o}=s(2455),{InstallConfig:a}=s(8465),{ILogService:n}=s(730),c=r.inject(n).get("server");c.info("Starting server");const l=r.inject(o),h=t.createServer(e.callback()),u=function(e){const t=parseInt(e,10);return isNaN(t)?e:t>=0&&t}(l.get(a.PORT)||"3000");h.listen(u),h.on("error",(function(e){if("listen"!==e.syscall)throw e;const t="string"==typeof u?"Pipe "+u:"Port "+u;switch(e.code){case"EACCES":c.error(t+" requires elevated privileges"),process.exit(1);case"EADDRINUSE":c.error(t+" is already in use"),process.exit(1);default:throw e}})),h.on("listening",(function(){const e=h.address(),t="string"==typeof e?"pipe "+e:"port "+e.port;c.info("Server running on "+t),c.info("Try visiting http://localhost:"+e.port+" through your browser")})),l.get(a.INSTALLED)&&r.inject(i).init().catch((e=>{c.error(e),process.exit(1)}))})()})();